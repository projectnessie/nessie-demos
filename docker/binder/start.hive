#!/bin/bash -e
#
# Copyright (C) 2020 Dremio
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

HIVE_PARENT_DIR=$1
RESOURCE_DIR=$2
HIVE_VERSION=$3
HIVE_FOLDER_NAME="apache-hive-$HIVE_VERSION-bin"
HIVE_WAREHOUSE_DIR=$HIVE_PARENT_DIR/hive_warehouse
HIVE_PID_FILE=$HIVE_PARENT_DIR/hiveserver2.pid
HIVE_DB=$HIVE_PARENT_DIR/metastore_db

if [ -z "$HIVE_PARENT_DIR" ]; then
  echo "Input the parent dir as the first argument"
  exit 1
fi

if [ -z "$RESOURCE_DIR" ]; then
  echo "Input the resource dir as the second argument"
  exit 1
fi

if [ -z "$HIVE_VERSION" ]; then
  echo "Input Hive version as the third argument"
  exit 1
fi

export HIVE_HOME=$HIVE_PARENT_DIR/$HIVE_FOLDER_NAME

# Copy the needed configs to Hive folder
cp $RESOURCE_DIR/hive/config/hive-site.xml ${HIVE_HOME}/conf/

# Set Hive warehouse path in the hive-site.xml
sed -i.bak "s~HIVE_WAREHOUSE_DIR~$HIVE_WAREHOUSE_DIR~g" ${HIVE_HOME}/conf/hive-site.xml

# Check for Java 8 + 11 for tox (also in /notebooks/tests/scripts/start_hive)
if [[ -z ${JAVA8_HOME} || -z ${JAVA11_HOME} || ! -d ${JAVA8_HOME} || ! -d ${JAVA11_HOME} ]] ; then
  cat <<! > /dev/stderr


============================================================================================================
Define the JAVA8_HOME and JAVA11_HOME environment variables to point to Java 8 and Java 11 development kits.
============================================================================================================

Need Java 8 for Hive server to work.
Java 11 (not newer!) is required for Spark, but also Nessie.


!
  exit 1
fi

# Kill an already running hiveserver
if [[ -f $HIVE_PID_FILE ]] ; then
  kill "$(cat $HIVE_PID_FILE)" || true
  rm $HIVE_PID_FILE
fi

# Remove an already metastore-db
if [[ -d $HIVE_DB ]] ; then
  echo "Removing existing $HIVE_DB"
  rm -rf $HIVE_DB
fi

# (Re-)create hive warehouse folder
rm -rf $HIVE_WAREHOUSE_DIR
mkdir -p $HIVE_WAREHOUSE_DIR

# Initialize Hive's Derby database
$HIVE_HOME/bin/schematool -dbType derby -initSchema
echo "Finished initializing Derby database for Hive."

# increase the Heap memory being used by Hive-MapReduce jobs
export HADOOP_HEAPSIZE=1500

# Use Java 8 for Hive :facepalm:
OLD_PATH="$PATH"
export PATH="$JAVA8_HOME/bin:$PATH"
export JAVA_HOME=$JAVA8_HOME
cat <<!

For Hive Server:
================
Using JAVA_HOME=$JAVA_HOME
java binary: $(which java)
$(java -version)

!

# Once we are done from initializing the database, we start Hive
echo "Starting Hive..."
$HIVE_HOME/bin/hive --service hiveserver2 --hiveconf hive.server2.thrift.port=10000 --hiveconf hive.root.logger=INFO,console &
echo $! > $HIVE_PID_FILE
echo "... PID is $(cat $HIVE_PID_FILE)"

# Wait until Hive is ready to accept requests via Thrift. Hive may take some time to start in CI.
echo "Waiting up to 180 seconds for Hive to be ready..."
for _ in seq 1 180 ; do
  (netstat -ant | grep -q ':10000 .* LISTEN') && break
  sleep 1
done
if [[ $(netstat -ant | grep -q ':10000 .* LISTEN') -gt 0 ]] ; then
  echo "Hive did not start / not listening on port 10000 (Thrift)!"
  exit 1
fi
echo "Hive listening on port 10000 (Thrift)."

# Reset environment
export JAVA_HOME=$JAVA11_HOME
export PATH=$OLD_PATH
